# 1 "input/cidl_periodic_wake.h"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "input/cidl_periodic_wake.h"



# 1 "input/cidl_gen.h" 1



enum {
 false,
 true,

 itself,
 subtree,

 single,
 diff,
 same,

 keep,
 removal,

 creation,
 transition,
 terminal
};

enum {
 sched,
 mem_mgr,
 torrent,
 lock,
 evt,
 timed_blk,
 mbox
};

struct global_info {
 int service_name;
  int desc_close;
  int desc_dep_create;
  int desc_dep_close;
  int desc_global;
  int desc_block;
  int desc_has_data;
  int resc_has_data;
};
# 59 "input/cidl_gen.h"
typedef int td_t;
typedef int cbuf_t;
typedef int spdid_t;
typedef int tor_flags_t;
typedef int evt_t;
typedef int vaddr_t;

typedef unsigned char u8_t;
typedef unsigned short int u16_t;
typedef unsigned int u32_t;
typedef unsigned long long u64_t;
typedef unsigned long ul_t;
typedef signed char s8_t;
typedef signed short int s16_t;
typedef signed int s32_t;
typedef signed long long s64_t;

struct usr_inv_cap {int a;};
# 5 "input/cidl_periodic_wake.h" 2

struct global_info sgi = {
 .service_name = periodic_wake,

        .desc_close_self_only = true,
        .desc_dep_create_none = true,
        .desc_global = false,
        .desc_block = true,
        .desc_has_data = true,
        .resc_has_data = false,
};

void SM_creation_SM_periodic_wake_create;
void SM_transition_SM_periodic_wake_create_SM_periodic_wake_wait;
void SM_transition_SM_periodic_wake_wait_SM_periodic_wake_wait;
void SM_transition_SM_periodic_wake_wait_SM_periodic_wake_remove;
void SM_transition_SM_periodic_wake_create_SM_periodic_wake_remove;
void SM_terminal_SM_periodic_wake_remove;

int
periodic_wake_create(spdid_t CD_desc_data_CD_spdid,
       unsigned int CD_desc_data_CD_period);

int
periodic_wake_wait(spdid_t spdid);

int
periodic_wake_remove(spdid_t spdid,
       unsigned short int CD_desc_lookup_CD_thdid);
