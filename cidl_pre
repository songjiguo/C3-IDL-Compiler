# 1 "input/cidl_lock.h"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "input/cidl_lock.h"



# 1 "input/cidl_gen.h" 1



enum {
 false,
 true,

 itself,
 subtree,

 single,
 diff,
 same,

 keep,
 removal,

 creation,
 transition,
 terminal
};

struct global_info {
  int desc_close;
  int desc_dep_create;
  int desc_dep_close;
  int desc_global;
  int desc_block;
  int desc_has_data;
  int resc_has_data;
};
# 42 "input/cidl_gen.h"
typedef int td_t;
typedef int cbuf_t;
typedef int spdid_t;
typedef int tor_flags_t;
typedef int evt_t;
typedef int vaddr_t;
typedef unsigned int u32_t;
typedef unsigned short int us32_t;
typedef unsigned long ul_t;
typedef unsigned long long ull_t;

struct usr_inv_cap {int a;};
# 5 "input/cidl_lock.h" 2

struct global_info sgi = {
        .desc_close = itself,
        .desc_dep_create = single,
        .desc_dep_close = none,
        .desc_global = false,
        .desc_block = true,
        .desc_has_data = false,
        .resc_has_data = false,
};

void SM_creation_SM_lock_component_alloc;
void SM_transition_SM_lock_component_alloc_SM_lock_component_free;
void SM_transition_SM_lock_component_alloc_SM_lock_component_take;
void SM_transition_SM_lock_component_take_SM_lock_component_release;
void SM_transition_SM_lock_component_release_SM_lock_component_take;
void SM_transition_SM_lock_component_release_SM_lock_component_free;
void SM_terminal_SM_lock_component_free;

typedef ul_t CD_desc_data_retval_CD_ul_t_CD_lock_id; CD_desc_data_retval_CD_ul_t_CD_lock_id
lock_component_alloc(spdid_t CD_desc_data_CD_spd);

int
lock_component_take(spdid_t spd,
     ul_t CD_desc_lookup_CD_server_block_CD_lock_id,
     u32_t thd_id);

int
lock_component_release(spdid_t spd,
        ul_t CD_desc_lookup_CD_server_wakeup_CD_lock_id);

int
lock_component_free(spdid_t spd,
     ul_t CD_desc_terminate_CD_lock_id);
