# 1 "input/cidl_evt.h"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "input/cidl_evt.h"



# 1 "input/cidl_gen.h" 1



enum {
 false,
 true,

 itself,
 subtree,

 single,
 diff,
 same,

 keep,
 removal,

 creation,
 transition,
 terminal
};

enum {
 sched,
 mem_mgr,
 torrent,
 lock,
 evt,
 timed_blk,
 mbox
};

struct global_info {
 int service_name;
  int desc_close;
  int desc_dep_create;
  int desc_dep_close;
  int desc_global;
  int desc_block;
  int desc_has_data;
  int resc_has_data;
};
# 55 "input/cidl_gen.h"
typedef int td_t;
typedef int cbuf_t;
typedef int spdid_t;
typedef int tor_flags_t;
typedef int evt_t;
typedef int vaddr_t;
typedef unsigned int u32_t;
typedef unsigned short int us32_t;
typedef unsigned long ul_t;
typedef unsigned long long ull_t;

struct usr_inv_cap {int a;};
# 5 "input/cidl_evt.h" 2

struct global_info sgi = {
 .service_name = evt,
        .desc_close = itself,
        .desc_dep_create = same,
        .desc_dep_close = removal,
        .desc_global = true,
        .desc_block = true,
        .desc_has_data = true,
        .resc_has_data = false,
};

void SM_creation_SM_evt_split;
void SM_transition_SM_evt_split_SM_evt_wait;
void SM_transition_SM_evt_wait_SM_evt_trigger;
void SM_transition_SM_evt_trigger_SM_evt_wait;
void SM_transition_SM_evt_trigger_SM_evt_free;
void SM_transition_SM_evt_split_SM_evt_free;
void SM_terminal_SM_evt_free;
void SM_block_SM_evt_wait;
void SM_wakeup_SM_evt_trigger;

typedef long CD_desc_data_retval_CD_long_CD_evtid; CD_desc_data_retval_CD_long_CD_evtid
evt_split(spdid_t CD_desc_data_CD_spdid,
   long CD_desc_data_CD_parent_desc_CD_parent_evtid,
   int CD_desc_data_CD_grp);

long
evt_wait(spdid_t spdid,
  long CD_desc_lookup_CD_evtid);

int
evt_trigger(spdid_t spdid,
     long CD_desc_lookup_CD_evtid);

int
evt_free(spdid_t spdid,
  long CD_desc_lookup_CD_evtid);
