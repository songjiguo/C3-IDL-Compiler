# 1 "input/cidl_mm.h"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "input/cidl_mm.h"



# 1 "input/cidl_gen.h" 1



enum {
 false,
 true,

 itself,
 subtree,

 single,
 diff,
 same,

 keep,
 removal,

 creation,
 transition,
 terminal
};

enum {
 sched,
 mem_mgr,
 torrent,
 lock,
 evt,
 timed_blk,
 mbox
};

struct global_info {
 int service_name;
  int desc_close;
  int desc_dep_create;
  int desc_dep_close;
  int desc_global;
  int desc_block;
  int desc_has_data;
  int resc_has_data;
};
# 59 "input/cidl_gen.h"
typedef int td_t;
typedef int cbuf_t;
typedef int spdid_t;
typedef int tor_flags_t;
typedef int evt_t;
typedef int vaddr_t;
typedef unsigned int u32_t;
typedef unsigned short int us32_t;
typedef unsigned long ul_t;
typedef unsigned long long ull_t;

struct usr_inv_cap {int a;};
# 5 "input/cidl_mm.h" 2

struct global_info sgi = {
 .service_name = mem_mgr,

        .desc_close_subtree = true,
        .desc_dep_create_diff = true,
        .desc_dep_close_removal = true,
        .desc_global = true,
        .desc_block = false,
        .desc_has_data = true,
        .resc_has_data = true,
};

void SM_creation_SM___mman_alias_page;
void SM_transition_SM___mman_alias_page_SM___mman_alias_page;
void SM_terminal_SM_mman_revoke_page;

vaddr_t
mman_get_page(spdid_t CD_desc_data_CD_spd,
       vaddr_t CD_desc_data_CD_addr,
       int CD_desc_data_CD_flags);

int
mman_release_page(spdid_t spd,
    vaddr_t CD_desc_lookup_CD_addr,
    int flags);

int
mman_revoke_page(spdid_t spd,
   vaddr_t CD_desc_lookup_CD_addr,
   int flags);

typedef vaddr_t CD_desc_data_retval_CD_vaddr_t_CD_d_addr; CD_desc_data_retval_CD_vaddr_t_CD_d_addr
__mman_alias_page(spdid_t spd,
    vaddr_t CD_desc_lookup_CD_parent_desc_CD_addr,
    u32_t CD_desc_data_CD_d_spd_flags,
    vaddr_t CD_desc_data_CD_d_addr);
